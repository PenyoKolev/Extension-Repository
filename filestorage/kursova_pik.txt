#include <stdio.h>
#include <stdlib.h>
struct Telephones
{
 int IDnumber;
 char Model[20];
 double price;
 int amount;
 struct Telephones*next;
};
struct Telephones* head;

void Menu();
void InsertNew();
void Edit();
void ShowPrice();
void SendToFile();
void ShowID();
void  ReadFromFile();
void ChooseID ();
int main()
{
	head=NULL;	
    ReadFromFile();
 Menu();
 SendToFile();
 return 0;
}
void menu ()
{
 char choice;
   do{
      
      printf("\n  0- exit");
      printf("\n  1- add new item ");
      printf("\n  2- change the amount of chosen telephone ");
      printf("\n  3- show all telephones with price higher than the average one ");
      printf("\n  4- show information for telephone by entering ID number");
      fflush(stdin);
      choice = getchar();
      fflush(stdin);
      switch (choice)
      {
      case'1': InsertNew(); break;
      case'2': Edit(); break;
      case'3': ShowPrice(); break;
      case'4': ShowID(); break;
      case'0': break;
      }
   } while(choice!='0');
}
void InsertNew ()
{
  struct Telephones*current;
    FILE*fp;
 struct Telephones*temp = (struct Telephones*)malloc (sizeof (struct Telephones));
 if (head == NULL)
{
  head = temp;
  current = head;
  current->next = NULL;
 }
 else
 {
 	current = head;
    temp->next = head;
    head = temp;
 
 }

 printf("Enter ID number: \n");
 scanf("%lli", &temp->IDnumber);
 printf("Enter model of the telephone: \n");
 scanf("%s", temp->Model);
 printf("Enter the price: \n");
 scanf("%lf", &temp->price);
 printf("Enter the amount that is available: \n");
 scanf("%d", &temp->amount);

}

void ShowPrice()
    {
        
       struct Telephones*d;
       FILE*fp;
       
        double avprice=0, allprice=0;
        int count = 0;
       fp = fopen("tel", "rb");
       if(fp== NULL)
       {
           printf("Error reading the file!");
           exit(1);
       }

        for (d = head; d!=NULL; d=d->next)
        {
            allprice = allprice + d->price;
            count++;
        }
        avprice = allprice/count;
        printf("The average price of the phones is %lf!\n All phones with price higher than the average one:\n", avprice);

        for (d = head; d!=NULL; d=d->next)
        {
            if((d->price)>avprice)
            {
                printf("ID:%d \tModel:%s \tPrice:%lf \tAmount:%d\n", d->IDnumber, d->Model, d->price, d->amount);
                
            }
        }

    }

void ShowID()
{
    int flg =0;
    struct Telephones* d;
    
    FILE*fp;
     int CustmID = 0;
    printf("Enter ID: ");
    ChooseID ();
    scanf("%d", &CustmID);
      for(d = head; d != NULL; d = d->next)
      {
            if ((d->IDnumber)==CustmID)
            {
                printf("There are telephones with the same ID!\n");
                printf("ID: %d  model: %s   price: %lf   amount: %d", d->IDnumber, d->Model, d->price, d->amount);
                flg++;
                break;
            }
       }
       if(flg==0)
       {
           printf("No matches found!");
       }

}


void Edit()
{
    
    char izbor;
    int broi = 0, broipr = 0;
    struct Telephones* n;
    struct Telephones* del = (struct Telephones*)malloc(sizeof(struct Telephones));
    FILE*fp;
   int CsmID = 0;
    printf("Enter ID to edit amount: ");
    scanf("%d", &CsmID);
   

      for(n=head; n!=NULL; n=n->next)
      {
            if ((n->IDnumber)==CsmID)
            {
                printf("There are telephones with the same ID\n");
                do{
                printf("Press 1 for increasing the quantity and 2 for sale.\n");
                fflush(stdin);
                izbor = getchar();
                fflush(stdin);
                switch(izbor)
                {
                case '1':
                    {
                    printf("Enter with what amount you want to increase the telephone with the entered ID:\t");
                    scanf("%d", &broi);
                    (n->amount)=(n->amount)+broi;
                    printf("The amount is now %d!", n->amount);
                    break;
                    }
                case '2': printf("Your choice is to sell telephones!\n");
                        printf("How much telephones you want to sell?\n");
                        scanf("%d", &broipr);
                        if((n->amount)>(broipr))
                        {
                            (n->amount)=(n->amount)-broipr;
                            printf("You sold %d!\n",broipr);
                            printf("Now there are %d available in the store!\n", n->amount);
                            break;
                        }
                        else if((n->amount)<(broipr))
                        {
                            printf("There is not enough amount in the store!\n");
                            printf("There are only %d available!\n", n->amount);
                            break;
                        }
                        else if((n->amount)==broipr)
                        {

                            if(head==n) 
                            {
                                head = n->next;
                                free(n);
                                n=NULL;
                                printf("All telephones with that ID are sold out! Contact your deliverer!\n");
                            }
                            else if (n->next==NULL)  
                            {
                                n->next=NULL;
                                free(n);
                                n=NULL;
                                printf("All telephones with that ID are sold out! Contact your deliverer!");
                            }
                            else if((head==n)&&(head->next==NULL)) 
                            {
                                free(head);
                                head=NULL;
                                n=NULL;
                                printf("All telephones with that ID are sold out! Contact your deliverer!");
                            }
                            else
                            {
                                del=n->next;
                                *n=*del;
                                free(del);
                                del=NULL;
                                printf("All telephones with that ID are sold out! Connect your deliverer!");
                            }
                        }
                        else
                        {
                            printf("Something went wrong :(\n");
                            break;
                        }

                }
                }while((izbor!='1')&&(izbor!='2'));
               
                break;
            }
       }
}




void SendToFile( )
{
    FILE *fp;
    struct Telephones* current;
    current = head;
 
     fp = fopen("tel","wb");
 if (fp == NULL)
 {
  printf("Error with the file!(1)");
  exit(1);
 }
 
    while(current != NULL) {
        fwrite(current,sizeof(struct Telephones),1, fp);
        current = current->next;
    }
 
    fclose(fp);
}

void ReadFromFile()
{
    FILE *fp;
    struct Telephone* temp;
 
    if((fp=fopen("tel","rb"))==NULL)
        {           
		 printf("Error opening file for reading");
        return;
        }
 
    while(1) {
        temp = (struct Telephones*) malloc(sizeof(struct Telephones));
        if(fread(temp,sizeof(struct Telephones), 1, fp) != 1) break;
        temp->next = head;
        head = temp;
        }
 
    fclose(fp);
    }
void ChooseID ()
{
	 struct Telephones* d;
      for(d = head; d != NULL; d = d->next)
      {
                printf("ID: %d\n", d->IDnumber);
      }
}

